#!/bin/sh

# lumiknit's jump helper
# Authour: lumiknit (aasr4r4@gmail.com)
# Version: 0.0.3 (230811)

export J_HOME="$HOME"
export J_REPOS="$HOME/repos"
export J_BASES="$HOME/repos:$HOME/workspace"
export J_SANDBOX="$HOME/workspace/sandbox"

J() {
    # Extract all arguments from the seconds one.
    arg="${@:2}"
    # switch by commands
    case "$1" in
        cd|c)
            dirs=($(_J_tool find "$arg"))
            if [ ${#dirs[@]} -eq 0 ]; then
                echo "J ERR: Cannot find the path '$arg'!"
            elif [ ${#dirs[@]} -eq 1 ]; then
                echo "J: cd to ${dirs[1]}"
                cd "${dirs[1]}"
            else
                # Print first 8 matches
                echo "J: Top 8 matches of ${#dirs[@]} ones for '$arg'!"
                for dir in "${dirs[@]:0:8}"; do
                    echo "  $dir"
                done
                # Print more matches if there are more than 8
                if [ ${#dirs[@]} -gt 8 ]; then
                    echo "  ..."
                fi
                # Go to the first match
                echo "J: cd to ${dirs[1]}"
                cd "${dirs[1]}"
            fi
            ;;
        pushd|p)
            dirs=($(_J_tool find "$arg"))
            if [ ${#dirs[@]} -eq 0 ]; then
                echo "J ERR: Cannot find the path '$arg'!"
            elif [ ${#dirs[@]} -eq 1 ]; then
                echo "J: pushd to ${dirs[1]}"
                pushd "${dirs[1]}"
            else
                # Print first 8 matches
                echo "J: Top 8 matches of ${#dirs[@]} ones for '$arg'!"
                for dir in "${dirs[@]:0:8}"; do
                    echo "  $dir"
                done
                # Print more matches if there are more than 8
                if [ ${#dirs[@]} -gt 8 ]; then
                    echo "  ..."
                fi
                # Go to the first match
                echo "J: pushd to ${dirs[1]}"
                pushd "${dirs[1]}"
            fi
            ;;
        code|vscode|v)
            dirs=($(_J_tool find "$arg"))
            if [ ${#dirs[@]} -eq 0 ]; then
                echo "J ERR: Cannot find the path '$arg'!"
            elif [ ${#dirs[@]} -eq 1 ]; then
                echo "J: open ${dirs[1]} in vscode"
                code "${dirs[1]}"
            else
                # Print first 8 matches
                echo "J: Top 8 matches of ${#dirs[@]} ones for '$arg'!"
                for dir in "${dirs[@]:0:8}"; do
                    echo "  $dir"
                done
                # Print more matches if there are more than 8
                if [ ${#dirs[@]} -gt 8 ]; then
                    echo "  ..."
                fi
                # Go to the first match
                echo "J: open ${dirs[1]} in vscode"
                code "${dirs[1]}"
            fi
            ;;
        emacs|e)
            dirs=($(_J_tool find "$arg"))
            if [ ${#dirs[@]} -eq 0 ]; then
                echo "J ERR: Cannot find the path '$arg'!"
            elif [ ${#dirs[@]} -eq 1 ]; then
                echo "J: open ${dirs[1]} in emacs"
                open -a emacs "${dirs[1]}"
            else
                # Print first 8 matches
                echo "J: Top 8 matches of ${#dirs[@]} ones for '$arg'!"
                for dir in "${dirs[@]:0:8}"; do
                    echo "  $dir"
                done
                # Print more matches if there are more than 8
                if [ ${#dirs[@]} -gt 8 ]; then
                    echo "  ..."
                fi
                # Go to the first match
                echo "J: open ${dirs[1]} in emacs"
                open -a emacs "${dirs[1]}"
            fi
            ;;
        open|o)
            dirs=($(_J_tool find "$arg"))
            if [ ${#dirs[@]} -eq 0 ]; then
                echo "J ERR: Cannot find the path '$arg'!"
            elif [ ${#dirs[@]} -eq 1 ]; then
                echo "J: open ${dirs[1]} in emacs"
                open "${dirs[1]}"
            else
                # Print first 8 matches
                echo "J: Top 8 matches of ${#dirs[@]} ones for '$arg'!"
                for dir in "${dirs[@]:0:8}"; do
                    echo "  $dir"
                done
                # Print more matches if there are more than 8
                if [ ${#dirs[@]} -gt 8 ]; then
                    echo "  ..."
                fi
                # Go to the first match
                echo "J: open ${dirs[1]} in emacs"
                open "${dirs[1]}"
            fi
            ;;
        clone|cl1|1)
            _J_tool clone "$arg"
            ;;
        sandbox|s|0)
            case "$2" in
                help|--help|-h)
                    echo "J sandbox help"
                    echo "Usage: J sandbox [{<COMMAND>, <NAME>}]"
                    echo "  If no command is given, jump to the sandbox."
                    echo "  If name is not given, it'll use random name"
                    echo "Commands:"
                    echo "  help,--help,-h     - show this help"
                    ;;
                *)
                    name="$2"
                    if [ -z "$name" ]; then
                        date="$(date +%y%m%d)"
                        rand="$(cat /dev/random | head -c 6 | base64 | tr '[:upper:]' '[:lower:]' | sed -e 's/[^0-9a-z]/_/g')"
                        name="$date-$rand"
                    fi
                    echo "J: jump to sandbox $name"
                    if [ ! -d "$HOME/sandbox/$name" ]; then
                        mkdir -p "$HOME/sandbox/$name"
                    fi
                    cd "$HOME/sandbox/$name"
            ;;
        *)
            # Show version
            echo "J - lumiknit's jump helper"
            echo "Usage: J <COMMAND> <PATH>"
            echo "Commands:"
            echo "  cd,c               - cd to the path"
            echo "  pushd,p            - pushd to the path"
            echo "  code,vscode,v      - open the path in vscode"
            echo "  emacs,e            - open the path in emacs"
            echo "  open,o             - open the path using open"
            echo "  clone,cl1,1        - clone the path"
            echo "  sandbox,s,0        - jump to sandbox"
            echo "  help,*             - show this help"
            ;;
    esac
}

j() {
    if [ $# -eq 0 ]; then
        # Jump to sandbox
        J sandbox $@
    else
        J cd $@
    fi
}
